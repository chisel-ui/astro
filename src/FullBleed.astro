---
import { parseCssLength, joinStyles } from '@chisel-ui/core'
import Component from './Component.astro'
import { CSSLength } from '@chisel-ui/core'
import type { Props as ComponentProps } from './Component.astro'

export interface Props extends ComponentProps {
	maxWidth?: CSSLength
}

const {
	maxWidth,
    gap,
    gapInline,
	style = '',
	...props
} = Astro.props as Props

const maybeMaxWidth = parseCssLength(maxWidth)

const componentStyle = joinStyles(
	maybeMaxWidth && `--max-width: ${maybeMaxWidth}`,
	style
)
---

<Component gapInline={gapInline ?? gap ?? 'md'} data-chisel-full-bleed style={componentStyle} {...props}>
	<slot />
</Component>

<style is:global>
[data-chisel-full-bleed] {
    display: grid;
    grid-template-columns: 1fr min(
            var(--max-width, 1440px),
            calc(100% - (2 * var(--gap-inline)))
        ) 1fr;
    gap: var(--gap-block) 0px;
}

[data-chisel-full-bleed] > * {
    grid-column: 2;
	width: 100%;
}

[data-chisel-full-bleed] > [data-chisel-cover] {
    grid-column: 1 / -1;
}
</style>